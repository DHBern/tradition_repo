name: Docker

on:
  push:
    # Publish `1.2.3` tags as releases.
    tags:
      - '[0-9]*'

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: stemmarest

jobs:
  # Build artifacts, skip tests since they should already be known to pass
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Add Miredot license
      run: sed -i "s/MIREDOT_LICENSE/${{ secrets.MIREDOT_LICENSE }}/" pom.xml
    - name: Build with Maven
      run: mvn -B package -Dtests.skip.true --file pom.xml
    - name: Archive .war file
      uses: actions/upload-artifact@v2
      with:
        name: stemmarest-war
        path: target/stemmarest.war

  # Push image to Docker.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Retrieve .war file
        uses: actions/download-artifact@v2
        with:
          name: stemmarest-war
          path: target/stemmarest.war

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_PW }}" | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo IMAGE_NAME=$IMAGE_NAME
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_NAME:$VERSION
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:latest
